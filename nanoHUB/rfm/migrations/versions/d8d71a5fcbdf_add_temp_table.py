"""add temp table

Revision ID: d8d71a5fcbdf
Revises: 1a750e6eebea
Create Date: 2021-08-05 14:32:13.986505

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'd8d71a5fcbdf'
down_revision = '1a750e6eebea'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('record_update_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('last_processed_toolstart_id', sa.BigInteger(), server_default='0', nullable=False),
    sa.Column('last_processed_toolstart_id_updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_charset='utf8mb4',
    mysql_collate='utf8mb4_unicode_ci',
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_record_update_history_last_processed_toolstart_id'), 'record_update_history', ['last_processed_toolstart_id'], unique=True)
    op.create_table('temp_user_descriptor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=150), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=150), nullable=True),
    sa.Column('registration_date', sa.DateTime(), nullable=True),
    sa.Column('last_visit_date', sa.DateTime(), nullable=True),
    sa.Column('_last_updated', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('_created', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username'),
    mysql_charset='utf8mb4',
    mysql_collate='utf8mb4_unicode_ci',
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_temp_user_descriptor__last_updated'), 'temp_user_descriptor', ['_last_updated'], unique=False)
    op.create_index(op.f('ix_temp_user_descriptor_last_visit_date'), 'temp_user_descriptor', ['last_visit_date'], unique=False)
    op.create_index(op.f('ix_temp_user_descriptor_registration_date'), 'temp_user_descriptor', ['registration_date'], unique=False)
    op.create_table('user_descriptor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=150), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=150), nullable=True),
    sa.Column('registration_date', sa.DateTime(), nullable=True),
    sa.Column('last_visit_date', sa.DateTime(), nullable=True),
    sa.Column('_last_updated', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('_created', sa.DateTime(), nullable=False),
    sa.Column('first_sim_date', sa.DateTime(), nullable=True),
    sa.Column('last_sim_date', sa.DateTime(), nullable=True),
    sa.Column('sims_lifetime', sa.Integer(), nullable=True, comment='days from first to last simulation'),
    sa.Column('sims_count', sa.Integer(), nullable=True, comment='number of simulations'),
    sa.Column('sims_activity_days', sa.Integer(), nullable=True, comment='count of days spent performing simulations'),
    sa.Column('tools_used', sa.Text(), nullable=True, comment='names of tools used in simulations'),
    sa.Column('tools_count', sa.Integer(), nullable=True, comment='number of tools used in simulations'),
    sa.Column('active_days', sa.Integer(), nullable=True, comment='cound of days performing any activity'),
    sa.Column('lifetime_days', sa.Integer(), nullable=True, comment='last day - registration day'),
    sa.Column('average_freqency', sa.Numeric(), nullable=True, comment='F = lifetime in days / Days spent on nanoHUB'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username'),
    mysql_charset='utf8mb4',
    mysql_collate='utf8mb4_unicode_ci',
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_user_descriptor__last_updated'), 'user_descriptor', ['_last_updated'], unique=False)
    op.create_index(op.f('ix_user_descriptor_average_freqency'), 'user_descriptor', ['average_freqency'], unique=False)
    op.create_index(op.f('ix_user_descriptor_first_sim_date'), 'user_descriptor', ['first_sim_date'], unique=False)
    op.create_index(op.f('ix_user_descriptor_last_sim_date'), 'user_descriptor', ['last_sim_date'], unique=False)
    op.create_index(op.f('ix_user_descriptor_last_visit_date'), 'user_descriptor', ['last_visit_date'], unique=False)
    op.create_index(op.f('ix_user_descriptor_registration_date'), 'user_descriptor', ['registration_date'], unique=False)
    op.drop_index('ix_last_update_record_last_processed_toolstart_id', table_name='last_update_record')
    op.drop_table('last_update_record')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('last_update_record',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('last_processed_toolstart_id', mysql.BIGINT(display_width=20), server_default=sa.text("'0'"), autoincrement=False, nullable=False),
    sa.Column('last_processed_toolstart_id_updated', mysql.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index('ix_last_update_record_last_processed_toolstart_id', 'last_update_record', ['last_processed_toolstart_id'], unique=False)
    op.drop_index(op.f('ix_user_descriptor_registration_date'), table_name='user_descriptor')
    op.drop_index(op.f('ix_user_descriptor_last_visit_date'), table_name='user_descriptor')
    op.drop_index(op.f('ix_user_descriptor_last_sim_date'), table_name='user_descriptor')
    op.drop_index(op.f('ix_user_descriptor_first_sim_date'), table_name='user_descriptor')
    op.drop_index(op.f('ix_user_descriptor_average_freqency'), table_name='user_descriptor')
    op.drop_index(op.f('ix_user_descriptor__last_updated'), table_name='user_descriptor')
    op.drop_table('user_descriptor')
    op.drop_index(op.f('ix_temp_user_descriptor_registration_date'), table_name='temp_user_descriptor')
    op.drop_index(op.f('ix_temp_user_descriptor_last_visit_date'), table_name='temp_user_descriptor')
    op.drop_index(op.f('ix_temp_user_descriptor__last_updated'), table_name='temp_user_descriptor')
    op.drop_table('temp_user_descriptor')
    op.drop_index(op.f('ix_record_update_history_last_processed_toolstart_id'), table_name='record_update_history')
    op.drop_table('record_update_history')
    # ### end Alembic commands ###
