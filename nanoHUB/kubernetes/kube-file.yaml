apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose-resolved.yaml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: test-with-sam
    app: analysis-container
  name: test-with-sam
#  namespace: hubzero
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: test-with-sam
      app: analysis-container
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-resolved.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: test-with-sam
        app: analysis-container
    spec:
      containers:
        - args:
            - jupyter
            - lab
          env:
            - name: APP_DIR_NAME
              value: nanoHUB
            - name: APP_NAME
              value: nanoHUB
            - name: BUILD_WITH_JUPYTER
              value: "1"
            - name: CRON_LOG_FILE
              value: ' 2>&1 | /usr/bin/logger -t CRON'
            - name: GDAL_VERSION
              value: 3.4.0
            - name: GEOS_VERSION
              value: 3.10.1
            - name: HOME_DIR_NAME
              value: home
            - name: JUPYTER_DISPLAY_IP_ADDRESS
              value: 127.0.0.1
            - name: JUPYTER_IP_ADDRESS
              value: '*'
            - name: JUPYTER_PORT
              value: "80"
            - name: LANG
              value: C.UTF-8
            - name: LC_ALL
              value: C.UTF-8
            - name: LOCALE
              value: en_US.UTF-8
            - name: ORIGIN_IP_ADDRESS
              value: '*'
            - name: PAPERTRAIL_URL
              value: logs.papertrailapp.com:19303
            - name: PHP_VERSION
              value: "7.4"
            - name: PROJ_VERSION
              value: 8.1.1
            - name: TZ
              value: EST
            - name: jupyter_logging_file_backup_count
              value: "3"
            - name: jupyter_logging_file_dir
              value: .log
            - name: jupyter_logging_file_level
              value: INFO
            - name: jupyter_logging_file_max_bytes
              value: "100"
            - name: jupyter_logging_file_msg_format
              value: '[{%(filename)s:%(lineno)d} %(levelname)s - %(message)s'
            - name: jupyter_logging_file_name
              value: info.log
            - name: jupyter_logging_stdout_level
              value: ERROR
            - name: jupyter_logging_stdout_msg_format
              value: '[{%(filename)s:%(lineno)d} %(levelname)s - %(message)s'
            - name: pipeline_logging_stdout_level
              value: INFO
            - name: pipeline_logging_stdout_msg_format
              value: '[{%(filename)s:%(lineno)d} %(levelname)s - %(message)s'
            - name: pipeline_logging_syslog_level
              value: INFO
            - name: pipeline_logging_syslog_msg_format
              value: '[{%(filename)s:%(lineno)d} %(levelname)s - %(message)s'
          image: geddes-registry.rcac.purdue.edu/nanohub/nanohub-analytics_dev:0.1
          name: test-with-sam
          ports:
            - containerPort: 80
          resources: {}
          volumeMounts:
            - mountPath: /home/nanoHUB
              name: test-with-sam-claim0
      restartPolicy: Always
      volumes:
        - name: test-with-sam-claim0
          persistentVolumeClaim:
            claimName: test-with-sam-claim0
status: {}

---

#apiVersion: v1
#kind: Service
#metadata:
#  annotations:
#    kompose.cmd: kompose convert -f docker-compose-resolved.yaml
#    kompose.version: 1.26.1 (a9d05d509)
#    geddes-public-poolmetallb.universe.tf/address-pool: geddes-private-pool
##    metallb.universe.tf/address-pool: geddes-public-pool
#  creationTimestamp: null
#  labels:
#    io.kompose.service: test-with-sam
#  name: test-with-sam
##  namespace: hubzero
#spec:
#  type: LoadBalancer
#  ports:
#    - protocol: TCP
#      name: "80"
#      port: 80
#      targetPort: 80
#  selector:
#    io.kompose.service: test-with-sam
#status:
#  loadBalancer: {}


---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: test-with-sam-claim0
  name: test-with-sam-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

